import socket
import re
import datetime
import threading

HOST = '127.0.0.1'  # Локальний хост
PORT = 9000         # Обраний порт

# Регулярний вираз для трьох форматів дат:
date_regex = re.compile(
    r'\b(?:(?P<d1>\d{1,2})\.(?P<m1>\d{1,2})\.(?P<y1>\d{4})|'   # dd.mm.yyyy
    r'(?P<y2>\d{4})-(?P<m2>\d{1,2})-(?P<d2>\d{1,2})|'           # yyyy-mm-dd
    r'(?P<m3>\d{1,2})/(?P<y3>\d{4})/(?P<d3>\d{1,2}))\b'          # mm/yyyy/dd
)

def convert_date(match: re.Match) -> str:
    """Перетворює дату у формат dd.mm.yyyy, перевіряючи її на валідність."""
    try:
        if match.group('d1'):  # Формат dd.mm.yyyy
            day, month, year = int(match.group('d1')), int(match.group('m1')), int(match.group('y1'))
        elif match.group('y2'):  # Формат yyyy-mm-dd
            year, month, day = int(match.group('y2')), int(match.group('m2')), int(match.group('d2'))
        elif match.group('m3'):  # Формат mm/yyyy/dd
            month, year, day = int(match.group('m3')), int(match.group('y3')), int(match.group('d3'))
        else:
            return match.group(0)

        # Перевіряємо валідність дати
        datetime.date(year, month, day)
        return f"{day:02d}.{month:02d}.{year:04d}"
    except ValueError:
        return match.group(0)  # Якщо дата некоректна, повертаємо оригінальний текст

def process_text(text: str) -> str:
    """Обробляє весь текст, замінюючи дати на формат dd.mm.yyyy."""
    return date_regex.sub(convert_date, text)

def handle_client(conn: socket.socket, addr):
    """Обробляє клієнтське підключення у окремому потоці."""
    print(f"[{datetime.datetime.now()}] Підключення від {addr}")

    try:
        data = conn.recv(4096)  # Отримуємо дані
        if not data:
            return
        
        # Обробляємо текст
        result_text = process_text(data.decode('utf-8'))

        # Надсилаємо відповідь клієнту
        conn.sendall(result_text.encode('utf-8'))
    except Exception as e:
        print(f"[Помилка] Під час обробки клієнта {addr}: {e}")
    finally:
        conn.close()
        print(f"[{datetime.datetime.now()}] З'єднання з {addr} закрито.")

def main():
    """Запускає сервер, який приймає клієнтські підключення."""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
        server_socket.bind((HOST, PORT))
        server_socket.listen()
        print(f"Сервер запущено на {HOST}:{PORT}")

        while True:
            conn, addr = server_socket.accept()
            thread = threading.Thread(target=handle_client, args=(conn, addr), daemon=True)
            thread.start()

if __name__ == "__main__":
    main()
