–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É:
book_web_app/
‚îú‚îÄ‚îÄ app.py
‚îú‚îÄ‚îÄ books.db   ‚Üê —Å—Ç–≤–æ—Ä–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
‚îî‚îÄ‚îÄ templates/
    ‚îú‚îÄ‚îÄ add_book.html
    ‚îî‚îÄ‚îÄ search_books.html
 1. app.py ‚Äî –≥–æ–ª–æ–≤–Ω–∏–π Flask –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫:
from flask import Flask, render_template, request, redirect
import sqlite3

app = Flask(__name__)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ë–î (–æ–¥–∏–Ω —Ä–∞–∑)
def init_db():
    with sqlite3.connect("books.db") as conn:
        conn.execute('''
            CREATE TABLE IF NOT EXISTS books (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                author TEXT NOT NULL,
                title TEXT NOT NULL,
                year INTEGER NOT NULL
            )
        ''')

@app.route('/')
def home():
    return redirect('/add')

@app.route('/add', methods=['GET', 'POST'])
def add_book():
    if request.method == 'POST':
        author = request.form['author']
        title = request.form['title']
        year = int(request.form['year'])

        with sqlite3.connect("books.db") as conn:
            conn.execute("INSERT INTO books (author, title, year) VALUES (?, ?, ?)", (author, title, year))
        return redirect('/add')

    return render_template('add_book.html')

@app.route('/search', methods=['GET', 'POST'])
def search_books():
    books = []
    if request.method == 'POST':
        author = request.form['author']
        title = request.form['title']
        year_from = request.form['year_from']
        year_to = request.form['year_to']

        query = "SELECT * FROM books WHERE 1=1"
        params = []

        if author:
            query += " AND author LIKE ?"
            params.append(f"%{author}%")
        if title:
            query += " AND title LIKE ?"
            params.append(f"%{title}%")
        if year_from:
            query += " AND year >= ?"
            params.append(int(year_from))
        if year_to:
            query += " AND year <= ?"
            params.append(int(year_to))

        with sqlite3.connect("books.db") as conn:
            cur = conn.execute(query, params)
            books = cur.fetchall()

    return render_template('search_books.html', books=books)

if __name__ == '__main__':
    init_db()
    app.run(debug=True)
2. templates/add_book.html
<!doctype html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–î–æ–¥–∞—Ç–∏ –∫–Ω–∏–≥—É</title>
</head>
<body>
    <h2>–î–æ–¥–∞—Ç–∏ –∫–Ω–∏–≥—É</h2>
    <form method="post">
        <label>–ê–≤—Ç–æ—Ä: <input type="text" name="author" required></label><br><br>
        <label>–ù–∞–∑–≤–∞: <input type="text" name="title" required></label><br><br>
        <label>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è: <input type="number" name="year" required></label><br><br>
        <input type="submit" value="–î–æ–¥–∞—Ç–∏">
    </form>
    <br>
    <a href="/search">üîç –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –ø–æ—à—É–∫—É –∫–Ω–∏–≥</a>
</body>
</html>
3. templates/search_books.html
<!doctype html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <title>–ü–æ—à—É–∫ –∫–Ω–∏–≥</title>
</head>
<body>
    <h2>–ü–æ—à—É–∫ –∫–Ω–∏–≥</h2>
    <form method="post">
        <label>–ê–≤—Ç–æ—Ä: <input type="text" name="author"></label><br><br>
        <label>–ù–∞–∑–≤–∞: <input type="text" name="title"></label><br><br>
        <label>–†—ñ–∫ –≤–∏–¥–∞–Ω–Ω—è –≤—ñ–¥: <input type="number" name="year_from"></label><br><br>
        <label>–¥–æ: <input type="number" name="year_to"></label><br><br>
        <input type="submit" value="–ü–æ—à—É–∫">
    </form>

    {% if books %}
        <h3>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏:</h3>
        <ul>
            {% for book in books %}
                <li>{{ book[1] }} ‚Äî "{{ book[2] }}", {{ book[3] }} —Ä.</li>
            {% endfor %}
        </ul>
    {% endif %}

    <br>
    <a href="/add">üìö –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∫–Ω–∏–≥—É</a>
</body>
</html>
