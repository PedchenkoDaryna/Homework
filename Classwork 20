def ln1x(x, epsilon):
    if abs(x) >= 1:
        raise ValueError("–†—è–¥ –∑–±—ñ–≥–∞—î—Ç—å—Å—è –ª–∏—à–µ –ø—Ä–∏ |x| < 1")

    term = x  # –ø–µ—Ä—à–∏–π –¥–æ–¥–∞–Ω–æ–∫
    result = 0
    n = 1

    while abs(term) > epsilon:
        result += term
        n += 1
        term *= -x * (n - 1) / n  # –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä–µ–∫—É—Ä–µ–Ω—Ç–Ω—É —Ñ–æ—Ä–º—É–ª—É

    return result

# üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
test_values = [0.1, -0.3, 0.5, 0.9]
epsilon = 1e-6

print("–û–±—á–∏—Å–ª–µ–Ω–Ω—è ln(1 + x) —á–µ—Ä–µ–∑ —Ä—è–¥ –¢–µ–π–ª–æ—Ä–∞:")
for x in test_values:
    approx = ln1x(x, epsilon)
    actual = math.log(1 + x)
    print(f"x = {x:.2f}: –Ω–∞–±–ª–∏–∂–µ–Ω–æ = {approx:.8f}, math.log = {actual:.8f}, –ø–æ—Ö–∏–±–∫–∞ = {abs(approx - actual):.2e}")
